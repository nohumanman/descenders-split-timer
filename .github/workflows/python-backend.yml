# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest

    # run postgres service
    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi
          python -m pip install sqlfluff==2.3.5
          python -m pip install pylint

      - name: Run unit tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src/websocket-api:$(pwd)/src/web-api
          python -m unittest discover -s ./tests -p "*_test.py"

      - name: Lint python code (pylint)
        run: |
          # stop the build if there are Python syntax errors or undefined names
          cd src/
          pylint *.py --exit-zero
          cd tests/
          pylint *.py --exit-zero
          cd ..

      - name: Lint schema.sql
        run: |
          python -m sqlfluff lint --dialect postgres server/src/database-schema/schema.sql

      